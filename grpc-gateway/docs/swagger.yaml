basePath: /
definitions:
  main.messageServiceV1AddMemberToRoomResponseDto:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        $ref: '#/definitions/message_service.V1AddMemberToRoomResponse'
    type: object
  main.messageServiceV1AddMessageResponseDto:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        $ref: '#/definitions/message_service.V1AddMessageResponse'
    type: object
  main.messageServiceV1CreateRoomResponseDto:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        $ref: '#/definitions/message_service.V1CreateRoomResponse'
    type: object
  main.messageServiceV1GetRoomMessagesResponseDto:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        $ref: '#/definitions/message_service.V1GetRoomMessagesResponse'
    type: object
  main.messageServiceV1GetRoomResponseDto:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        $ref: '#/definitions/message_service.V1GetRoomResponse'
    type: object
  main.userServiceV1GetAllResponseDto:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        $ref: '#/definitions/user_service.V1GetAllResponse'
    type: object
  main.userServiceV1GetResponseDto:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        $ref: '#/definitions/user_service.V1GetResponse'
    type: object
  main.userServiceV1LoginResponseDto:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        $ref: '#/definitions/user_service.V1LoginResponse'
    type: object
  message_service.Message:
    properties:
      body:
        type: string
      id:
        type: integer
      roomID:
        type: string
      time:
        type: string
      type:
        $ref: '#/definitions/message_service.MessageType'
      userAvatar:
        type: string
      userID:
        type: integer
      userName:
        type: string
    type: object
  message_service.MessageType:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - MessageType_TYPE_SENT
    - MessageType_TYPE_RECEIVED
  message_service.MessageUser:
    properties:
      avatar:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
    type: object
  message_service.RoomMember:
    properties:
      id:
        type: integer
      roomID:
        type: string
      userID:
        type: integer
    type: object
  message_service.V1AddMemberToRoomRequest:
    properties:
      roomID:
        type: string
      userId:
        type: integer
    type: object
  message_service.V1AddMemberToRoomResponse:
    properties:
      members:
        items:
          $ref: '#/definitions/message_service.RoomMember'
        type: array
    type: object
  message_service.V1AddMessageRequest:
    properties:
      body:
        type: string
      roomID:
        type: string
      time:
        type: string
    type: object
  message_service.V1AddMessageResponse:
    properties:
      message:
        $ref: '#/definitions/message_service.Message'
    type: object
  message_service.V1CreateRoomRequest:
    properties:
      userId:
        type: integer
    type: object
  message_service.V1CreateRoomResponse:
    properties:
      id:
        type: string
    type: object
  message_service.V1GetRoomMessagesResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/message_service.Message'
        type: array
    type: object
  message_service.V1GetRoomResponse:
    properties:
      audience:
        $ref: '#/definitions/message_service.MessageUser'
      messages:
        items:
          $ref: '#/definitions/message_service.Message'
        type: array
      roomID:
        type: string
      user:
        $ref: '#/definitions/message_service.MessageUser'
    type: object
  user_service.User:
    properties:
      avatar:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      status:
        type: string
      token:
        type: string
    type: object
  user_service.UserPublic:
    properties:
      avatar:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
    type: object
  user_service.V1GetAllResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/user_service.UserPublic'
        type: array
    type: object
  user_service.V1GetResponse:
    properties:
      user:
        $ref: '#/definitions/user_service.UserPublic'
    type: object
  user_service.V1LoginRequest:
    properties:
      Name:
        description: '@gotags: validate:"required"'
        type: string
      Password:
        description: '@gotags: validate:"required"'
        type: string
    required:
    - Name
    - Password
    type: object
  user_service.V1LoginResponse:
    properties:
      user:
        $ref: '#/definitions/user_service.User'
    type: object
info:
  contact:
    email: s.heidar@jabama.com
    name: API Support
  description: This is gRPC Gateway
  title: gRPC Gateway
  version: "1.0"
paths:
  /api/v1/message-service/room:
    post:
      description: V1CreateRoom
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/message_service.V1CreateRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.messageServiceV1CreateRoomResponseDto'
      security:
      - BearerAuth: []
      summary: V1CreateRoom
      tags:
      - message_service
  /api/v1/message-service/room/{RoomID}:
    get:
      description: V1GetRoom
      parameters:
      - description: RoomID
        in: path
        name: RoomID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.messageServiceV1GetRoomResponseDto'
      security:
      - BearerAuth: []
      summary: V1GetRoom
      tags:
      - message_service
  /api/v1/message-service/room/{RoomID}/messages:
    get:
      description: V1GetRoomMessages
      parameters:
      - description: RoomID
        in: path
        name: RoomID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.messageServiceV1GetRoomMessagesResponseDto'
      security:
      - BearerAuth: []
      summary: V1GetRoomMessages
      tags:
      - message_service
  /api/v1/message-service/v1-add-member-to-room:
    post:
      description: V1AddMemberToRoom
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/message_service.V1AddMemberToRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.messageServiceV1AddMemberToRoomResponseDto'
      security:
      - BearerAuth: []
      summary: V1AddMemberToRoom
      tags:
      - message_service
  /api/v1/message-service/v1-add-message:
    post:
      description: V1AddMessage
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/message_service.V1AddMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.messageServiceV1AddMessageResponseDto'
      security:
      - BearerAuth: []
      summary: V1AddMessage
      tags:
      - message_service
  /api/v1/user-service/{userID}:
    get:
      description: V1Get
      parameters:
      - description: userID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.userServiceV1GetResponseDto'
      security:
      - BearerAuth: []
      summary: V1Get
      tags:
      - user_service
  /api/v1/user-service/all:
    get:
      description: V1GetAll
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.userServiceV1GetAllResponseDto'
      security:
      - BearerAuth: []
      summary: V1GetAll
      tags:
      - user_service
  /api/v1/user-service/login:
    post:
      description: V1Login
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user_service.V1LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.userServiceV1LoginResponseDto'
      security:
      - BearerAuth: []
      summary: V1Login
      tags:
      - user_service
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
