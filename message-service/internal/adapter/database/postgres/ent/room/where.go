// Code generated by ent, DO NOT EDIT.

package room

import (
	"entgo.io/ent/dialect/sql"
	"github.com/espitman/gws-chat/message-service/internal/adapter/database/postgres/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Room {
	return predicate.Room(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Room {
	return predicate.Room(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Room {
	return predicate.Room(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Room {
	return predicate.Room(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Room {
	return predicate.Room(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Room {
	return predicate.Room(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Room {
	return predicate.Room(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Room {
	return predicate.Room(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Room {
	return predicate.Room(sql.FieldLTE(FieldID, id))
}

// RoomID applies equality check predicate on the "RoomID" field. It's identical to RoomIDEQ.
func RoomID(v string) predicate.Room {
	return predicate.Room(sql.FieldEQ(FieldRoomID, v))
}

// Users applies equality check predicate on the "Users" field. It's identical to UsersEQ.
func Users(v string) predicate.Room {
	return predicate.Room(sql.FieldEQ(FieldUsers, v))
}

// RoomIDEQ applies the EQ predicate on the "RoomID" field.
func RoomIDEQ(v string) predicate.Room {
	return predicate.Room(sql.FieldEQ(FieldRoomID, v))
}

// RoomIDNEQ applies the NEQ predicate on the "RoomID" field.
func RoomIDNEQ(v string) predicate.Room {
	return predicate.Room(sql.FieldNEQ(FieldRoomID, v))
}

// RoomIDIn applies the In predicate on the "RoomID" field.
func RoomIDIn(vs ...string) predicate.Room {
	return predicate.Room(sql.FieldIn(FieldRoomID, vs...))
}

// RoomIDNotIn applies the NotIn predicate on the "RoomID" field.
func RoomIDNotIn(vs ...string) predicate.Room {
	return predicate.Room(sql.FieldNotIn(FieldRoomID, vs...))
}

// RoomIDGT applies the GT predicate on the "RoomID" field.
func RoomIDGT(v string) predicate.Room {
	return predicate.Room(sql.FieldGT(FieldRoomID, v))
}

// RoomIDGTE applies the GTE predicate on the "RoomID" field.
func RoomIDGTE(v string) predicate.Room {
	return predicate.Room(sql.FieldGTE(FieldRoomID, v))
}

// RoomIDLT applies the LT predicate on the "RoomID" field.
func RoomIDLT(v string) predicate.Room {
	return predicate.Room(sql.FieldLT(FieldRoomID, v))
}

// RoomIDLTE applies the LTE predicate on the "RoomID" field.
func RoomIDLTE(v string) predicate.Room {
	return predicate.Room(sql.FieldLTE(FieldRoomID, v))
}

// RoomIDContains applies the Contains predicate on the "RoomID" field.
func RoomIDContains(v string) predicate.Room {
	return predicate.Room(sql.FieldContains(FieldRoomID, v))
}

// RoomIDHasPrefix applies the HasPrefix predicate on the "RoomID" field.
func RoomIDHasPrefix(v string) predicate.Room {
	return predicate.Room(sql.FieldHasPrefix(FieldRoomID, v))
}

// RoomIDHasSuffix applies the HasSuffix predicate on the "RoomID" field.
func RoomIDHasSuffix(v string) predicate.Room {
	return predicate.Room(sql.FieldHasSuffix(FieldRoomID, v))
}

// RoomIDEqualFold applies the EqualFold predicate on the "RoomID" field.
func RoomIDEqualFold(v string) predicate.Room {
	return predicate.Room(sql.FieldEqualFold(FieldRoomID, v))
}

// RoomIDContainsFold applies the ContainsFold predicate on the "RoomID" field.
func RoomIDContainsFold(v string) predicate.Room {
	return predicate.Room(sql.FieldContainsFold(FieldRoomID, v))
}

// UsersEQ applies the EQ predicate on the "Users" field.
func UsersEQ(v string) predicate.Room {
	return predicate.Room(sql.FieldEQ(FieldUsers, v))
}

// UsersNEQ applies the NEQ predicate on the "Users" field.
func UsersNEQ(v string) predicate.Room {
	return predicate.Room(sql.FieldNEQ(FieldUsers, v))
}

// UsersIn applies the In predicate on the "Users" field.
func UsersIn(vs ...string) predicate.Room {
	return predicate.Room(sql.FieldIn(FieldUsers, vs...))
}

// UsersNotIn applies the NotIn predicate on the "Users" field.
func UsersNotIn(vs ...string) predicate.Room {
	return predicate.Room(sql.FieldNotIn(FieldUsers, vs...))
}

// UsersGT applies the GT predicate on the "Users" field.
func UsersGT(v string) predicate.Room {
	return predicate.Room(sql.FieldGT(FieldUsers, v))
}

// UsersGTE applies the GTE predicate on the "Users" field.
func UsersGTE(v string) predicate.Room {
	return predicate.Room(sql.FieldGTE(FieldUsers, v))
}

// UsersLT applies the LT predicate on the "Users" field.
func UsersLT(v string) predicate.Room {
	return predicate.Room(sql.FieldLT(FieldUsers, v))
}

// UsersLTE applies the LTE predicate on the "Users" field.
func UsersLTE(v string) predicate.Room {
	return predicate.Room(sql.FieldLTE(FieldUsers, v))
}

// UsersContains applies the Contains predicate on the "Users" field.
func UsersContains(v string) predicate.Room {
	return predicate.Room(sql.FieldContains(FieldUsers, v))
}

// UsersHasPrefix applies the HasPrefix predicate on the "Users" field.
func UsersHasPrefix(v string) predicate.Room {
	return predicate.Room(sql.FieldHasPrefix(FieldUsers, v))
}

// UsersHasSuffix applies the HasSuffix predicate on the "Users" field.
func UsersHasSuffix(v string) predicate.Room {
	return predicate.Room(sql.FieldHasSuffix(FieldUsers, v))
}

// UsersEqualFold applies the EqualFold predicate on the "Users" field.
func UsersEqualFold(v string) predicate.Room {
	return predicate.Room(sql.FieldEqualFold(FieldUsers, v))
}

// UsersContainsFold applies the ContainsFold predicate on the "Users" field.
func UsersContainsFold(v string) predicate.Room {
	return predicate.Room(sql.FieldContainsFold(FieldUsers, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Room) predicate.Room {
	return predicate.Room(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Room) predicate.Room {
	return predicate.Room(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Room) predicate.Room {
	return predicate.Room(sql.NotPredicates(p))
}
